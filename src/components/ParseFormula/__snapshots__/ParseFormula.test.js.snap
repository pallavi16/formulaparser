// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ParseFormula should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ParseFormula />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="calculater-container"
      >
        <h2>
          Formula
        </h2>
        <div>
          <p>
            Loading...
          </p>
        </div>
        <button
          onClick={[Function]}
        >
           ADD
        </button>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Formula
          </h2>,
          <div>
            <p>
              Loading...
            </p>
          </div>,
          <button
            onClick={[Function]}
          >
             ADD
          </button>,
        ],
        "className": "calculater-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Formula",
          },
          "ref": null,
          "rendered": "Formula",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              Loading...
            </p>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Loading...",
            },
            "ref": null,
            "rendered": "Loading...",
            "type": "p",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " ADD",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": " ADD",
          "type": "button",
        },
      ],
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="calculater-container"
        >
          <h2>
            Formula
          </h2>
          <div>
            <p>
              Loading...
            </p>
          </div>
          <button
            onClick={[Function]}
          >
             ADD
          </button>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              Formula
            </h2>,
            <div>
              <p>
                Loading...
              </p>
            </div>,
            <button
              onClick={[Function]}
            >
               ADD
            </button>,
          ],
          "className": "calculater-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Formula",
            },
            "ref": null,
            "rendered": "Formula",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <p>
                Loading...
              </p>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Loading...",
              },
              "ref": null,
              "rendered": "Loading...",
              "type": "p",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " ADD",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": " ADD",
            "type": "button",
          },
        ],
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
